name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up QEMU for multi-architecture builds (if needed)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Step 3: Set up Docker Buildx for advanced build features
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Step 5: Build and Push Django Image
      - name: Build and Push Django
        uses: docker/build-push-action@v4
        with:
          context: ./painfx_backend/backend
          push: true
          tags: supernovasoftwareco014/painfx-backend:latest

      # Step 6: Build and Push Celery Image
      - name: Build and Push Celery
        uses: docker/build-push-action@v4
        with:
          context: ./painfx_backend/infrastructure/celery/celery-worker
          push: true
          tags: supernovasoftwareco014/painfx-celery:latest

      # Step 7: Build and Push Celery Flower Image
      - name: Build and Push Celery Flower
        uses: docker/build-push-action@v4
        with:
          context: ./painfx_backend/infrastructure/celery/celery-flower
          push: true
          tags: supernovasoftwareco014/celery-flower:latest

      # Step 8: Build and Push Next.js Image
      - name: Build and Push Next.js
        uses: docker/build-push-action@v4
        with:
          context: ./painfx_frontend
          push: true
          tags: supernovasoftwareco014/painfx-frontend:latest

      # Step 9: Copy docker-stack.yml to VPS
      - name: Copy docker-stack.yml to VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22  # Adjust if using a different SSH port
          source: "./painfx_production/docker-stack.yml"
          target: "~/painfx_production"
          overwrite: true
          strip_components: 1
          

      # Step 10: Deploy to VPS via SSH
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          script: |
            cd ~/painfx_production/painfx_production
            # Deploy Docker stack
            docker stack deploy -c docker-stack.yml painfx_stack
            echo "Deployment complete!"
