services:
  traefik:
    image: traefik:v2.9
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.email=supernovasoftwareco@gmail.com
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entryPoint.permanent=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certificates:/letsencrypt
    networks:
      - web
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB_FILE: /run/secrets/postgres_db
    secrets:
      - postgres_user
      - postgres_password
      - postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data:z
    networks:
      - backend
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  redis:
    image: redis:6
    networks:
      - backend
    deploy:
      replicas: 1

  django:
    image: supernovasoftwareco014/painfx-backend:latest
    environment:
      DATABASE_URL: "postgres://painfx_user@postgres:5432/painfx_db"
      REDIS_URL: "redis://redis:6379/0"
      AUTH_COOKIE_SECURE: "True"
      DOMAIN: "https://painfx.in"
      DJANGO_DEBUG: "False"
      CORS_ALLOWED_ORIGINS: "https://painfx.in"
      ALLOWED_HOSTS: "painfx.in,www.painfx.in,143.110.155.48"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    secrets:
      - google_auth_secret_key
      - email_host_password
      - twilio_account_sid
      - twilio_auth_token
      - stripe_secret_key
      - stripe_webhook_secret
      - google_maps_api_key
      - django_secret_key
    depends_on:
      - postgres
      - redis
    networks:
      - backend
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`api.painfx.in`)"
      - "traefik.http.routers.django.entrypoints=websecure"
      - "traefik.http.routers.django.tls.certresolver=myresolver"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 2
        delay: 10s

  nextjs:
    image: supernovasoftwareco014/painfx-frontend:latest
    environment:
      NEXT_PUBLIC_BACKEND_API_URL: "https://api.painfx.in"
      NEXT_PUBLIC_REDIRECT_URL: "https://painfx.in/google"
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextjs.rule=Host(`painfx.in`)"
      - "traefik.http.routers.nextjs.entrypoints=websecure"
      - "traefik.http.routers.nextjs.tls.certresolver=myresolver"
      - "traefik.http.services.nextjs.loadbalancer.server.port=3000"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  celery:
    image: supernovasoftwareco014/painfx-celery:latest
    environment:
      DATABASE_URL: "postgres://painfx_user@postgres:5432/painfx_db"
      REDIS_URL: "redis://redis:6379/0"
    networks:
      - backend
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  watchtower:
    image: containrrr/watchtower:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_LABEL_ENABLE: "true"
    networks:
      - web
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

networks:
  web:
    external: true
  backend:
    driver: overlay

volumes:
  traefik-certificates:
  postgres_data:

secrets:
  postgres_user:
    external: true
  postgres_password:
    external: true
  postgres_db:
    external: true
  google_auth_secret_key:
    external: true
  email_host_password:
    external: true
  twilio_account_sid:
    external: true
  twilio_auth_token:
    external: true
  stripe_secret_key:
    external: true
  stripe_webhook_secret:
    external: true
  google_maps_api_key:
    external: true
  django_secret_key:
    external: true
